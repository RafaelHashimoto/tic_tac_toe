version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  # aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
  destroy_environment:
    steps:
      - run:
        name: Destroy Environment
        when: on_fail
        command: |
          aws cloudformation delete-stack --stack-name tic-tac-toe-${CIRCLE_WORKFLOW_ID}

jobs:
  # Exercise: Config and Deployment
  create_infrastructure:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file .cloudformation/template.yml \
              --stack-name tic-tac-toe-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-east-1
  configure_infrastructure:
    docker:
      - image: alpine:3.14
    steps:
      - checkout
      - add_ssh_keys:
          # You can get this ID in the section where you registered the SSH Key
          fingerprints: ["99:73:3a:67:91:76:d8:07:6a:17:5c:d6:9d:9c:73:77"]
      - run:
          name: Install Ansible
          command: |
            apk add --update ansible
      - run:
          name: Run Playbook and Configure server
          command: |
            ansible-playbook -i inventory .ansible/playbook.yml
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - checkout
      - run:
          name: Test job
          # Fail the job intentionally to simulate an error.
          command: return 1
      - destroy_environment
# Sequential workflow
workflows:
  # Name the workflow
  tic-tac-toe:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
        requires:
          - create_infrastructure
      - smoke_test:
        requires:
          - configure_infrastructure
